[{"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\index.js":"1","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\App.js":"2","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\layout\\Landing.js":"3","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\layout\\Navbar.js":"4","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\auth\\Login.js":"5","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\auth\\Register.js":"6","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\store.js":"7","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\reducers\\index.js":"8","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\reducers\\alert.js":"9","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\actions\\types.js":"10","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\actions\\alert.js":"11","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\layout\\Alert.js":"12","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\actions\\auth.js":"13","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\reducers\\auth.js":"14","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\utils\\setAuthToken.js":"15","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\dashboard\\Dashboard.js":"16","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\routing\\PrivateRoute.js":"17","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\reducers\\profile.js":"18","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\actions\\profile.js":"19","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\layout\\Spinner.js":"20","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profile-forms\\CreateProfile.js":"21","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\dashboard\\DashboardActions.js":"22","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profile-forms\\EditProfile.js":"23","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profile-forms\\AddExperience.js":"24","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profile-forms\\AddEducation.js":"25","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\dashboard\\Experience.js":"26","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\dashboard\\Education.js":"27","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profiles\\Profiles.js":"28","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profiles\\ProfileItem.js":"29","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profile\\Profile.js":"30","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profile\\ProfileTop.js":"31","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profile\\ProfileAbout.js":"32","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profile\\ProfileExperience.js":"33","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profile\\ProfileEducation.js":"34","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profile\\ProfileGithub.js":"35","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\posts\\Posts.js":"36","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\actions\\post.js":"37","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\reducers\\post.js":"38","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\posts\\PostItem.js":"39"},{"size":207,"mtime":1609283845335,"results":"40","hashOfConfig":"41"},{"size":3750,"mtime":1610727345132,"results":"42","hashOfConfig":"41"},{"size":1366,"mtime":1609702913576,"results":"43","hashOfConfig":"41"},{"size":1920,"mtime":1610727392035,"results":"44","hashOfConfig":"41"},{"size":2407,"mtime":1609690728144,"results":"45","hashOfConfig":"41"},{"size":4246,"mtime":1609690924923,"results":"46","hashOfConfig":"41"},{"size":405,"mtime":1609621141157,"results":"47","hashOfConfig":"41"},{"size":251,"mtime":1610726472942,"results":"48","hashOfConfig":"41"},{"size":425,"mtime":1609624962967,"results":"49","hashOfConfig":"41"},{"size":791,"mtime":1610726774325,"results":"50","hashOfConfig":"41"},{"size":367,"mtime":1609627876118,"results":"51","hashOfConfig":"41"},{"size":529,"mtime":1609627277233,"results":"52","hashOfConfig":"41"},{"size":2322,"mtime":1609774513947,"results":"53","hashOfConfig":"41"},{"size":1337,"mtime":1610059128540,"results":"54","hashOfConfig":"41"},{"size":265,"mtime":1609686724679,"results":"55","hashOfConfig":"41"},{"size":2408,"mtime":1610307029475,"results":"56","hashOfConfig":"41"},{"size":718,"mtime":1609695373560,"results":"57","hashOfConfig":"41"},{"size":1337,"mtime":1610685379807,"results":"58","hashOfConfig":"41"},{"size":6962,"mtime":1610307096767,"results":"59","hashOfConfig":"41"},{"size":300,"mtime":1609773510987,"results":"60","hashOfConfig":"41"},{"size":9419,"mtime":1609878019767,"results":"61","hashOfConfig":"41"},{"size":701,"mtime":1609862526378,"results":"62","hashOfConfig":"41"},{"size":10919,"mtime":1610307055618,"results":"63","hashOfConfig":"41"},{"size":4594,"mtime":1610307165892,"results":"64","hashOfConfig":"41"},{"size":4619,"mtime":1610307141923,"results":"65","hashOfConfig":"41"},{"size":1729,"mtime":1610059273755,"results":"66","hashOfConfig":"41"},{"size":1715,"mtime":1610059479261,"results":"67","hashOfConfig":"41"},{"size":1722,"mtime":1610307010641,"results":"68","hashOfConfig":"41"},{"size":1159,"mtime":1610219149896,"results":"69","hashOfConfig":"41"},{"size":3763,"mtime":1610684166984,"results":"70","hashOfConfig":"41"},{"size":2719,"mtime":1610397600449,"results":"71","hashOfConfig":"41"},{"size":894,"mtime":1610398131029,"results":"72","hashOfConfig":"41"},{"size":743,"mtime":1610515442223,"results":"73","hashOfConfig":"41"},{"size":829,"mtime":1610516077258,"results":"74","hashOfConfig":"41"},{"size":2279,"mtime":1610685094186,"results":"75","hashOfConfig":"41"},{"size":1127,"mtime":1610728339832,"results":"76","hashOfConfig":"41"},{"size":570,"mtime":1610726941766,"results":"77","hashOfConfig":"41"},{"size":648,"mtime":1610726771450,"results":"78","hashOfConfig":"41"},{"size":1786,"mtime":1610729076396,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"psq1rx",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\index.js",[],["168","169"],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\App.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\layout\\Landing.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\layout\\Navbar.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\auth\\Login.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\auth\\Register.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\store.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\reducers\\index.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\reducers\\alert.js",["170"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case SET_ALERT:\r\n            return [...state, payload];\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\actions\\types.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\actions\\alert.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\layout\\Alert.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\actions\\auth.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\reducers\\auth.js",["171"],"import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    ACCOUNT_DELETED,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload,\r\n            };\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', payload.token);\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n            };\r\n        case REGISTER_FAIL:\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n        case ACCOUNT_DELETED:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\utils\\setAuthToken.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\dashboard\\Dashboard.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\routing\\PrivateRoute.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\reducers\\profile.js",["172"],"import {\r\n    GET_PROFILE,\r\n    GET_PROFILES,\r\n    PROFILE_ERROR,\r\n    CLEAR_PROFILE,\r\n    UPDATE_PROFILE,\r\n    GET_REPOS,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    profiles: [],\r\n    repos: [],\r\n    loading: true,\r\n    error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case GET_PROFILE:\r\n        case UPDATE_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n                loading: false,\r\n            };\r\n        case GET_PROFILES:\r\n            return {\r\n                ...state,\r\n                profiles: payload,\r\n                loading: false,\r\n            };\r\n        case PROFILE_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false,\r\n                profile: null,\r\n            };\r\n        case CLEAR_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: null,\r\n                repos: [],\r\n                loading: false,\r\n            };\r\n        case GET_REPOS:\r\n            return {\r\n                ...state,\r\n                repos: payload,\r\n                loading: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\actions\\profile.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\layout\\Spinner.js",["173"],"import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nexport default () => (\r\n    <Fragment>\r\n        <img\r\n            src={spinner}\r\n            style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n            alt=\"Loading...\"\r\n        />\r\n    </Fragment>\r\n);\r\n","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profile-forms\\CreateProfile.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\dashboard\\DashboardActions.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profile-forms\\EditProfile.js",["174"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst EditProfile = ({\r\n    profile: { profile, loading },\r\n    createProfile,\r\n    getCurrentProfile,\r\n    history,\r\n}) => {\r\n    const [formData, setFormData] = useState({\r\n        company: '',\r\n        website: '',\r\n        location: '',\r\n        status: '',\r\n        skills: '',\r\n        githubusername: '',\r\n        bio: '',\r\n        twitter: '',\r\n        facebook: '',\r\n        linkedin: '',\r\n        youtube: '',\r\n        instagram: '',\r\n    });\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n\r\n        setFormData({\r\n            company: loading || !profile.company ? '' : profile.company,\r\n            website: loading || !profile.website ? '' : profile.website,\r\n            location: loading || !profile.location ? '' : profile.location,\r\n            status: loading || !profile.status ? '' : profile.status,\r\n            skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n            githubusername:\r\n                loading || !profile.githubusername\r\n                    ? ''\r\n                    : profile.githubusername,\r\n            bio: loading || !profile.bio ? '' : profile.bio,\r\n            twitter: loading || !profile.twitter ? '' : profile.social.twitter,\r\n            facebook:\r\n                loading || !profile.facebook ? '' : profile.social.facebook,\r\n            linkedin:\r\n                loading || !profile.linkedin ? '' : profile.social.linkedin,\r\n            youtube: loading || !profile.youtube ? '' : profile.social.youtube,\r\n            instagram:\r\n                loading || !profile.instagram ? '' : profile.social.instagram,\r\n        });\r\n    }, [loading, getCurrentProfile]);\r\n\r\n    const {\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedin,\r\n        youtube,\r\n        instagram,\r\n    } = formData;\r\n\r\n    const onChange = e =>\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createProfile(formData, history, true);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">Create Your Profile</h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fas fa-user\"></i> Let's get some information to\r\n                make your profile stand out\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                    <select\r\n                        name=\"status\"\r\n                        value={status}\r\n                        onChange={e => onChange(e)}\r\n                    >\r\n                        <option value=\"0\">* Select Professional Status</option>\r\n                        <option value=\"Developer\">Developer</option>\r\n                        <option value=\"Junior Developer\">\r\n                            Junior Developer\r\n                        </option>\r\n                        <option value=\"Senior Developer\">\r\n                            Senior Developer\r\n                        </option>\r\n                        <option value=\"Manager\">Manager</option>\r\n                        <option value=\"Student or Learning\">\r\n                            Student or Learning\r\n                        </option>\r\n                        <option value=\"Instructor\">\r\n                            Instructor or Teacher\r\n                        </option>\r\n                        <option value=\"Intern\">Intern</option>\r\n                        <option value=\"Other\">Other</option>\r\n                    </select>\r\n                    <small className=\"form-text\">\r\n                        Give us an idea of where you are at in your career\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Company\"\r\n                        name=\"company\"\r\n                        value={company}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                    <small className=\"form-text\">\r\n                        Could be your own company or one you work for\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Website\"\r\n                        name=\"website\"\r\n                        value={website}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                    <small className=\"form-text\">\r\n                        Could be your own or a company website\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Location\"\r\n                        name=\"location\"\r\n                        value={location}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                    <small className=\"form-text\">\r\n                        City & state suggested (eg. Boston, MA)\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"* Skills\"\r\n                        name=\"skills\"\r\n                        value={skills}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                    <small className=\"form-text\">\r\n                        Please use comma separated values (eg.\r\n                        HTML,CSS,JavaScript,PHP)\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Github Username\"\r\n                        name=\"githubusername\"\r\n                        value={githubusername}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                    <small className=\"form-text\">\r\n                        If you want your latest repos and a Github link, include\r\n                        your username\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        placeholder=\"A short bio of yourself\"\r\n                        name=\"bio\"\r\n                        value={bio}\r\n                        onChange={e => onChange(e)}\r\n                    ></textarea>\r\n                    <small className=\"form-text\">\r\n                        Tell us a little about yourself\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"my-2\">\r\n                    <button\r\n                        onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n                        type=\"button\"\r\n                        className=\"btn btn-light\"\r\n                    >\r\n                        Add Social Network Links\r\n                    </button>\r\n                    <span>Optional</span>\r\n                </div>\r\n\r\n                {displaySocialInputs && (\r\n                    <Fragment>\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-twitter fa-2x\"></i>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Twitter URL\"\r\n                                name=\"twitter\"\r\n                                value={twitter}\r\n                                onChange={e => onChange(e)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-facebook fa-2x\"></i>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Facebook URL\"\r\n                                name=\"facebook\"\r\n                                value={facebook}\r\n                                onChange={e => onChange(e)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-youtube fa-2x\"></i>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"YouTube URL\"\r\n                                name=\"youtube\"\r\n                                value={youtube}\r\n                                onChange={e => onChange(e)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-linkedin fa-2x\"></i>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Linkedin URL\"\r\n                                name=\"linkedin\"\r\n                                value={linkedin}\r\n                                onChange={e => onChange(e)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-instagram fa-2x\"></i>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Instagram URL\"\r\n                                name=\"instagram\"\r\n                                value={instagram}\r\n                                onChange={e => onChange(e)}\r\n                            />\r\n                        </div>\r\n                    </Fragment>\r\n                )}\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n                    Go Back\r\n                </Link>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired,\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n    withRouter(EditProfile)\r\n);\r\n","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profile-forms\\AddExperience.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profile-forms\\AddEducation.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\dashboard\\Experience.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\dashboard\\Education.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profiles\\Profiles.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profiles\\ProfileItem.js",["175"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileItem = ({\r\n    profile: {\r\n        user: { _id, name, avatar },\r\n        status,\r\n        company,\r\n        location,\r\n        skills,\r\n    },\r\n}) => {\r\n    return (\r\n        <div className=\"profile bg-light\">\r\n            <img src={avatar} alt=\"\" className=\"round-img\" />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>\r\n                    {status} {company && <span> at {company}</span>}\r\n                </p>\r\n                <p className=\"my-1\">{location && <span>{location}</span>}</p>\r\n                <Link to={`/profile/${_id}`} className=\"btn btn-primary\">\r\n                    View Profile\r\n                </Link>\r\n            </div>\r\n            <ul>\r\n                {skills.slice(0, 4).map((skill, index) => (\r\n                    <li key={index} className=\"text-primary\">\r\n                        <i className=\"fas fa-check\"></i> {skill}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nProfileItem.propTypes = {};\r\n\r\nexport default ProfileItem;\r\n","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profile\\Profile.js",["176"],"import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport ProfileTop from './ProfileTop';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileExperience from './ProfileExperience';\r\nimport ProfileEducation from './ProfileEducation';\r\nimport ProfileGithub from './ProfileGithub';\r\nimport { getProfileById } from '../../actions/profile';\r\n\r\nconst Profile = ({\r\n    getProfileById,\r\n    profile: { profile, loading },\r\n    auth,\r\n    match,\r\n}) => {\r\n    useEffect(() => {\r\n        getProfileById(match.params.id);\r\n    }, [getProfileById]);\r\n\r\n    return (\r\n        <Fragment>\r\n            {profile === null || loading ? (\r\n                <Spinner />\r\n            ) : (\r\n                <Fragment>\r\n                    <Link to=\"/profiles\" className=\"btn btn-light\">\r\n                        Back To Profiles\r\n                    </Link>\r\n                    {auth.isAuthenticated &&\r\n                        auth.loading === false &&\r\n                        auth.user._id === profile.user._id && (\r\n                            <Link to=\"/edit-profile\" className=\"btn btn-dark\">\r\n                                Edit Profile\r\n                            </Link>\r\n                        )}\r\n                    <div class=\"profile-grid my-1\">\r\n                        <ProfileTop profile={profile} />\r\n                        <ProfileAbout profile={profile} />\r\n                        <div className=\"profile-exp bg-white p-2\">\r\n                            <h2 className=\"text-primary\">Experience</h2>\r\n                            {profile.experience.length > 0 ? (\r\n                                <Fragment>\r\n                                    {profile.experience.map(experience => (\r\n                                        <ProfileExperience\r\n                                            key={experience._id}\r\n                                            experience={experience}\r\n                                        />\r\n                                    ))}\r\n                                </Fragment>\r\n                            ) : (\r\n                                <h4>No experience credentials</h4>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"profile-edu bg-white p-2\">\r\n                            <h2 className=\"text-primary\">Education</h2>\r\n                            {profile.education.length > 0 ? (\r\n                                <Fragment>\r\n                                    {profile.education.map(education => (\r\n                                        <ProfileEducation\r\n                                            key={education._id}\r\n                                            education={education}\r\n                                        />\r\n                                    ))}\r\n                                </Fragment>\r\n                            ) : (\r\n                                <h4>No education credentials</h4>\r\n                            )}\r\n                        </div>\r\n\r\n                        {profile.githubusername && (\r\n                            <ProfileGithub username={profile.githubusername} />\r\n                        )}\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nProfile.propTypes = {\r\n    getProfileById: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profile\\ProfileTop.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profile\\ProfileAbout.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profile\\ProfileExperience.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profile\\ProfileEducation.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profile\\ProfileGithub.js",["177"],"import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getGithubRepos } from '../../actions/profile';\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n    useEffect(() => {\r\n        getGithubRepos(username);\r\n    }, [getGithubRepos]);\r\n\r\n    return (\r\n        <div className=\"profile-github\">\r\n            <h2 className=\"text-primary my-1\">Github Repos</h2>\r\n            {repos === null ? (\r\n                <Spinner />\r\n            ) : (\r\n                repos.map(repo => (\r\n                    <div key={repo.id} className=\"repo bg-white p-1 my-1\">\r\n                        <div>\r\n                            <h4>\r\n                                <a\r\n                                    href={repo.html_url}\r\n                                    target=\"_blank\"\r\n                                    rel=\"noopener noreferrer\"\r\n                                >\r\n                                    {repo.name}\r\n                                </a>\r\n                            </h4>\r\n                            <p>{repo.description}</p>\r\n                        </div>\r\n                        <div>\r\n                            <ul>\r\n                                <li className=\"badge badge-primary\">\r\n                                    Stars: {repo.stargazers_count}\r\n                                </li>\r\n                                <li className=\"badge badge-dark\">\r\n                                    Watchers: {repo.watchers_count}\r\n                                </li>\r\n                                <li className=\"badge badge-light\">\r\n                                    Forks: {repo.forks_count}\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n    getGithubRepos: PropTypes.func.isRequired,\r\n    repos: PropTypes.array.isRequired,\r\n    username: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToPropos = state => ({\r\n    repos: state.profile.repos,\r\n});\r\n\r\nexport default connect(mapStateToPropos, { getGithubRepos })(ProfileGithub);\r\n","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\posts\\Posts.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\actions\\post.js",["178"],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\reducers\\post.js",["179"],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\posts\\PostItem.js",["180"],"import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\n\r\nconst PostItem = ({\r\n    auth,\r\n    post: { _id, text, name, avatar, user, likes, comments, date },\r\n}) => (\r\n    <div class=\"post bg-white p-1 my-1\">\r\n        <div>\r\n            <a href=\"profile.html\">\r\n                <img class=\"round-img\" src={avatar} alt=\"\" />\r\n                <h4>{name}</h4>\r\n            </a>\r\n        </div>\r\n        <div>\r\n            <p class=\"my-1\">{text}</p>\r\n            <p class=\"post-date\">\r\n                Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\r\n            </p>\r\n            <button type=\"button\" class=\"btn btn-light\">\r\n                <i class=\"fas fa-thumbs-up\"></i>{' '}\r\n                {likes.length > 0 && <span>{likes.length}</span>}\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-light\">\r\n                <i class=\"fas fa-thumbs-down\"></i>\r\n            </button>\r\n            <Link to={`/posts/${_id}`} class=\"btn btn-primary\">\r\n                Discussion{' '}\r\n                {comments.length > 0 && (\r\n                    <span class=\"comment-count\">{comments.length}</span>\r\n                )}\r\n            </Link>\r\n            {!auth.loading && user === auth.user._id && (\r\n                <button type=\"button\" class=\"btn btn-danger\">\r\n                    <i class=\"fas fa-times\"></i>\r\n                </button>\r\n            )}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nPostItem.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(PostItem);\r\n",{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":5,"column":1,"nodeType":"187","endLine":16,"endColumn":2},{"ruleId":"185","severity":1,"message":"186","line":19,"column":1,"nodeType":"187","endLine":54,"endColumn":2},{"ruleId":"185","severity":1,"message":"186","line":18,"column":1,"nodeType":"187","endLine":58,"endColumn":2},{"ruleId":"185","severity":1,"message":"188","line":4,"column":1,"nodeType":"187","endLine":12,"endColumn":3},{"ruleId":"189","severity":1,"message":"190","line":53,"column":8,"nodeType":"191","endLine":53,"endColumn":36,"suggestions":"192"},{"ruleId":"193","severity":1,"message":"194","line":3,"column":8,"nodeType":"195","messageId":"196","endLine":3,"endColumn":17},{"ruleId":"189","severity":1,"message":"197","line":21,"column":8,"nodeType":"191","endLine":21,"endColumn":24,"suggestions":"198"},{"ruleId":"189","severity":1,"message":"199","line":10,"column":8,"nodeType":"191","endLine":10,"endColumn":24,"suggestions":"200"},{"ruleId":"193","severity":1,"message":"201","line":2,"column":10,"nodeType":"195","messageId":"196","endLine":2,"endColumn":18},{"ruleId":"185","severity":1,"message":"186","line":10,"column":1,"nodeType":"187","endLine":29,"endColumn":2},{"ruleId":"193","severity":1,"message":"202","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":25},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profile.bio', 'profile.company', 'profile.facebook', 'profile.githubusername', 'profile.instagram', 'profile.linkedin', 'profile.location', 'profile.skills', 'profile.social.facebook', 'profile.social.instagram', 'profile.social.linkedin', 'profile.social.twitter', 'profile.social.youtube', 'profile.status', 'profile.twitter', 'profile.website', and 'profile.youtube'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.company', you can also switch to useReducer instead of useState and read 'profile.company' in the reducer.","ArrayExpression",["205"],"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["206"],"React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["207"],"'setAlert' is defined but never used.","'Fragment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},"Update the dependencies array to be: [loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.twitter, profile.social.twitter, profile.social.facebook, profile.social.linkedin, profile.social.youtube, profile.social.instagram, profile.facebook, profile.linkedin, profile.youtube, profile.instagram]",{"range":"214","text":"215"},"Update the dependencies array to be: [getProfileById, match.params.id]",{"range":"216","text":"217"},"Update the dependencies array to be: [getGithubRepos, username]",{"range":"218","text":"219"},[1960,1988],"[loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.twitter, profile.social.twitter, profile.social.facebook, profile.social.linkedin, profile.social.youtube, profile.social.instagram, profile.facebook, profile.linkedin, profile.youtube, profile.instagram]",[690,706],"[getProfileById, match.params.id]",[352,368],"[getGithubRepos, username]"]