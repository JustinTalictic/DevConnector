[{"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\index.js":"1","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\App.js":"2","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\layout\\Landing.js":"3","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\layout\\Navbar.js":"4","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\auth\\Login.js":"5","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\auth\\Register.js":"6","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\store.js":"7","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\reducers\\index.js":"8","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\reducers\\alert.js":"9","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\actions\\types.js":"10","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\actions\\alert.js":"11","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\layout\\Alert.js":"12","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\actions\\auth.js":"13","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\reducers\\auth.js":"14","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\utils\\setAuthToken.js":"15","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\dashboard\\Dashboard.js":"16","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\routing\\PrivateRoute.js":"17","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\reducers\\profile.js":"18","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\actions\\profile.js":"19","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\layout\\Spinner.js":"20","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profile-forms\\CreateProfile.js":"21","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\dashboard\\DashboardActions.js":"22","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profile-forms\\EditProfile.js":"23","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profile-forms\\AddExperience.js":"24","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profile-forms\\AddEducation.js":"25","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\dashboard\\Experience.js":"26","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\dashboard\\Education.js":"27","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profiles\\Profiles.js":"28","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profiles\\ProfileItem.js":"29"},{"size":207,"mtime":1609283845335,"results":"30","hashOfConfig":"31"},{"size":3237,"mtime":1610139399466,"results":"32","hashOfConfig":"31"},{"size":1366,"mtime":1609702913576,"results":"33","hashOfConfig":"31"},{"size":1835,"mtime":1610139517868,"results":"34","hashOfConfig":"31"},{"size":2407,"mtime":1609690728144,"results":"35","hashOfConfig":"31"},{"size":4246,"mtime":1609690924923,"results":"36","hashOfConfig":"31"},{"size":405,"mtime":1609621141157,"results":"37","hashOfConfig":"31"},{"size":212,"mtime":1609699080748,"results":"38","hashOfConfig":"31"},{"size":425,"mtime":1609624962967,"results":"39","hashOfConfig":"31"},{"size":710,"mtime":1610068262457,"results":"40","hashOfConfig":"31"},{"size":367,"mtime":1609627876118,"results":"41","hashOfConfig":"31"},{"size":529,"mtime":1609627277233,"results":"42","hashOfConfig":"31"},{"size":2322,"mtime":1609774513947,"results":"43","hashOfConfig":"31"},{"size":1337,"mtime":1610059128540,"results":"44","hashOfConfig":"31"},{"size":265,"mtime":1609686724679,"results":"45","hashOfConfig":"31"},{"size":2391,"mtime":1610059864140,"results":"46","hashOfConfig":"31"},{"size":718,"mtime":1609695373560,"results":"47","hashOfConfig":"31"},{"size":1305,"mtime":1610140957037,"results":"48","hashOfConfig":"31"},{"size":6974,"mtime":1610140737376,"results":"49","hashOfConfig":"31"},{"size":300,"mtime":1609773510987,"results":"50","hashOfConfig":"31"},{"size":9419,"mtime":1609878019767,"results":"51","hashOfConfig":"31"},{"size":701,"mtime":1609862526378,"results":"52","hashOfConfig":"31"},{"size":10900,"mtime":1609878009810,"results":"53","hashOfConfig":"31"},{"size":4588,"mtime":1609962445291,"results":"54","hashOfConfig":"31"},{"size":4613,"mtime":1610059687825,"results":"55","hashOfConfig":"31"},{"size":1729,"mtime":1610059273755,"results":"56","hashOfConfig":"31"},{"size":1715,"mtime":1610059479261,"results":"57","hashOfConfig":"31"},{"size":1711,"mtime":1610141981183,"results":"58","hashOfConfig":"31"},{"size":1159,"mtime":1610219149896,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"psq1rx",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"62"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\index.js",[],["129","130"],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\App.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\layout\\Landing.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\layout\\Navbar.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\auth\\Login.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\auth\\Register.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\store.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\reducers\\index.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\reducers\\alert.js",["131"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case SET_ALERT:\r\n            return [...state, payload];\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\actions\\types.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\actions\\alert.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\layout\\Alert.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\actions\\auth.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\reducers\\auth.js",["132"],"import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    ACCOUNT_DELETED,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload,\r\n            };\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', payload.token);\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n            };\r\n        case REGISTER_FAIL:\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n        case ACCOUNT_DELETED:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\utils\\setAuthToken.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\dashboard\\Dashboard.js",["133"],"import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport DashboardActions from './DashboardActions';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\nimport { deleteAccount, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst Dashboard = ({\r\n    getCurrentProfile,\r\n    deleteAccount,\r\n    auth: { user },\r\n    profile: { profile, loading },\r\n}) => {\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n    }, []);\r\n\r\n    return loading && profile === null ? (\r\n        <Spinner />\r\n    ) : (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">Dashboard</h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fas fa-user\"> Welcome {user && user.name}</i>\r\n            </p>\r\n            {profile !== null ? (\r\n                <Fragment>\r\n                    <DashboardActions />\r\n                    <Experience experience={profile.experience} />\r\n                    <Education education={profile.education} />\r\n                    <div className=\"my-2\">\r\n                        <button\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => deleteAccount()}\r\n                        >\r\n                            <i className=\"fas fa-user-minus\"> </i> Delete My\r\n                            Account\r\n                        </button>\r\n                    </div>\r\n                </Fragment>\r\n            ) : (\r\n                <Fragment>\r\n                    <p>\r\n                        You have not yet setup a profile, please add some info\r\n                    </p>\r\n                    <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\r\n                        Create Profile\r\n                    </Link>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nDashboard.propTypes = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    deleteAccount: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\r\n    Dashboard\r\n);\r\n","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\routing\\PrivateRoute.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\reducers\\profile.js",["134"],"import {\r\n    GET_PROFILE,\r\n    GET_PROFILES,\r\n    PROFILE_ERROR,\r\n    CLEAR_PROFILE,\r\n    UPDATE_PROFILE,\r\n    GET_REPOS,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    profiles: [],\r\n    repos: [],\r\n    loading: true,\r\n    error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case GET_PROFILE:\r\n        case UPDATE_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n                loading: false,\r\n            };\r\n        case GET_PROFILES:\r\n            return {\r\n                ...state,\r\n                profiles: payload,\r\n                loading: false,\r\n            };\r\n        case PROFILE_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false,\r\n            };\r\n        case CLEAR_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: null,\r\n                repos: [],\r\n                loading: false,\r\n            };\r\n        case GET_REPOS:\r\n            return {\r\n                ...state,\r\n                repos: payload,\r\n                loading: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\actions\\profile.js",["135"],"import axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\nimport {\r\n    GET_PROFILE,\r\n    GET_PROFILES,\r\n    PROFILE_ERROR,\r\n    UPDATE_PROFILE,\r\n    CLEAR_PROFILE,\r\n    ACCOUNT_DELETED,\r\n    GET_REPOS,\r\n} from './types';\r\n\r\n// Get current users profile\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/profile/me');\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status,\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\n// Get all profiles\r\nexport const getProfiles = () => async dispatch => {\r\n    dispatch({ type: CLEAR_PROFILE });\r\n\r\n    try {\r\n        const res = await axios.get('/api/profile');\r\n\r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status,\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\n// Get profile by ID\r\nexport const getProfileById = userId => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/profile/user/${userId}`);\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status,\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\n// Get Github repos\r\nexport const getGithubRepos = username => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/profile/github/${username}`);\r\n\r\n        dispatch({\r\n            type: GET_REPOS,\r\n            payload: res.data,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status,\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\n// Create of update profile\r\nexport const createProfile = (\r\n    formData,\r\n    history,\r\n    edit = false\r\n) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        };\r\n\r\n        const res = await axios.post('/api/profile', formData, config);\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data,\r\n        });\r\n\r\n        dispatch(\r\n            setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success')\r\n        );\r\n\r\n        if (!edit) {\r\n            history.push('/dashboard');\r\n        }\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status,\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\n//Add Experience\r\nexport const addExperience = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        };\r\n\r\n        const res = await axios.put(\r\n            '/api/profile/experience',\r\n            formData,\r\n            config\r\n        );\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data,\r\n        });\r\n\r\n        dispatch(setAlert('Experience Added', 'success'));\r\n\r\n        history.push('/dashboard');\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status,\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\n//Add Education\r\nexport const addEducation = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        };\r\n\r\n        const res = await axios.put('/api/profile/education', formData, config);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data,\r\n        });\r\n\r\n        dispatch(setAlert('Education Added', 'success'));\r\n\r\n        history.push('/dashboard');\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status,\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\n//Delete experience\r\nexport const deleteExperience = id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/experience/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data,\r\n        });\r\n\r\n        dispatch(setAlert('Experience Removed', 'success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status,\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\n//Delete education\r\nexport const deleteEducation = id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/education/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data,\r\n        });\r\n\r\n        dispatch(setAlert('Education Removed', 'success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status,\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\n//Delete account & profile\r\nexport const deleteAccount = id => async dispatch => {\r\n    if (window.confirm('Are you sure? This can NOT be undone!')) {\r\n        try {\r\n            const res = await axios.delete('/api/profile');\r\n\r\n            dispatch({ type: CLEAR_PROFILE });\r\n            dispatch({ type: ACCOUNT_DELETED });\r\n\r\n            dispatch(setAlert('Your account has been permanantly deleted'));\r\n        } catch (err) {\r\n            dispatch({\r\n                type: PROFILE_ERROR,\r\n                payload: {\r\n                    msg: err.response.statusText,\r\n                    status: err.response.status,\r\n                },\r\n            });\r\n        }\r\n    }\r\n};\r\n","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\layout\\Spinner.js",["136"],"import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nexport default () => (\r\n    <Fragment>\r\n        <img\r\n            src={spinner}\r\n            style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n            alt=\"Loading...\"\r\n        />\r\n    </Fragment>\r\n);\r\n","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profile-forms\\CreateProfile.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\dashboard\\DashboardActions.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profile-forms\\EditProfile.js",["137"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst EditProfile = ({\r\n    profile: { profile, loading },\r\n    createProfile,\r\n    getCurrentProfile,\r\n    history,\r\n}) => {\r\n    const [formData, setFormData] = useState({\r\n        company: '',\r\n        website: '',\r\n        location: '',\r\n        status: '',\r\n        skills: '',\r\n        githubusername: '',\r\n        bio: '',\r\n        twitter: '',\r\n        facebook: '',\r\n        linkedin: '',\r\n        youtube: '',\r\n        instagram: '',\r\n    });\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n\r\n        setFormData({\r\n            company: loading || !profile.company ? '' : profile.company,\r\n            website: loading || !profile.website ? '' : profile.website,\r\n            location: loading || !profile.location ? '' : profile.location,\r\n            status: loading || !profile.status ? '' : profile.status,\r\n            skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n            githubusername:\r\n                loading || !profile.githubusername\r\n                    ? ''\r\n                    : profile.githubusername,\r\n            bio: loading || !profile.bio ? '' : profile.bio,\r\n            twitter: loading || !profile.twitter ? '' : profile.social.twitter,\r\n            facebook:\r\n                loading || !profile.facebook ? '' : profile.social.facebook,\r\n            linkedin:\r\n                loading || !profile.linkedin ? '' : profile.social.linkedin,\r\n            youtube: loading || !profile.youtube ? '' : profile.social.youtube,\r\n            instagram:\r\n                loading || !profile.instagram ? '' : profile.social.instagram,\r\n        });\r\n    }, [loading]);\r\n\r\n    const {\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedin,\r\n        youtube,\r\n        instagram,\r\n    } = formData;\r\n\r\n    const onChange = e =>\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createProfile(formData, history, true);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">Create Your Profile</h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fas fa-user\"></i> Let's get some information to\r\n                make your profile stand out\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                    <select\r\n                        name=\"status\"\r\n                        value={status}\r\n                        onChange={e => onChange(e)}\r\n                    >\r\n                        <option value=\"0\">* Select Professional Status</option>\r\n                        <option value=\"Developer\">Developer</option>\r\n                        <option value=\"Junior Developer\">\r\n                            Junior Developer\r\n                        </option>\r\n                        <option value=\"Senior Developer\">\r\n                            Senior Developer\r\n                        </option>\r\n                        <option value=\"Manager\">Manager</option>\r\n                        <option value=\"Student or Learning\">\r\n                            Student or Learning\r\n                        </option>\r\n                        <option value=\"Instructor\">\r\n                            Instructor or Teacher\r\n                        </option>\r\n                        <option value=\"Intern\">Intern</option>\r\n                        <option value=\"Other\">Other</option>\r\n                    </select>\r\n                    <small className=\"form-text\">\r\n                        Give us an idea of where you are at in your career\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Company\"\r\n                        name=\"company\"\r\n                        value={company}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                    <small className=\"form-text\">\r\n                        Could be your own company or one you work for\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Website\"\r\n                        name=\"website\"\r\n                        value={website}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                    <small className=\"form-text\">\r\n                        Could be your own or a company website\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Location\"\r\n                        name=\"location\"\r\n                        value={location}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                    <small className=\"form-text\">\r\n                        City & state suggested (eg. Boston, MA)\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"* Skills\"\r\n                        name=\"skills\"\r\n                        value={skills}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                    <small className=\"form-text\">\r\n                        Please use comma separated values (eg.\r\n                        HTML,CSS,JavaScript,PHP)\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Github Username\"\r\n                        name=\"githubusername\"\r\n                        value={githubusername}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                    <small className=\"form-text\">\r\n                        If you want your latest repos and a Github link, include\r\n                        your username\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        placeholder=\"A short bio of yourself\"\r\n                        name=\"bio\"\r\n                        value={bio}\r\n                        onChange={e => onChange(e)}\r\n                    ></textarea>\r\n                    <small className=\"form-text\">\r\n                        Tell us a little about yourself\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"my-2\">\r\n                    <button\r\n                        onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n                        type=\"button\"\r\n                        className=\"btn btn-light\"\r\n                    >\r\n                        Add Social Network Links\r\n                    </button>\r\n                    <span>Optional</span>\r\n                </div>\r\n\r\n                {displaySocialInputs && (\r\n                    <Fragment>\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-twitter fa-2x\"></i>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Twitter URL\"\r\n                                name=\"twitter\"\r\n                                value={twitter}\r\n                                onChange={e => onChange(e)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-facebook fa-2x\"></i>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Facebook URL\"\r\n                                name=\"facebook\"\r\n                                value={facebook}\r\n                                onChange={e => onChange(e)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-youtube fa-2x\"></i>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"YouTube URL\"\r\n                                name=\"youtube\"\r\n                                value={youtube}\r\n                                onChange={e => onChange(e)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-linkedin fa-2x\"></i>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Linkedin URL\"\r\n                                name=\"linkedin\"\r\n                                value={linkedin}\r\n                                onChange={e => onChange(e)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-instagram fa-2x\"></i>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Instagram URL\"\r\n                                name=\"instagram\"\r\n                                value={instagram}\r\n                                onChange={e => onChange(e)}\r\n                            />\r\n                        </div>\r\n                    </Fragment>\r\n                )}\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n                    Go Back\r\n                </Link>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired,\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n    withRouter(EditProfile)\r\n);\r\n","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profile-forms\\AddExperience.js",["138","139"],"import React, { Fragment, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addExperience } from '../../actions/profile';\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n    const [formData, setFormData] = useState({\r\n        company: '',\r\n        title: '',\r\n        location: '',\r\n        from: '',\r\n        to: '',\r\n        current: false,\r\n        description: '',\r\n    });\r\n\r\n    const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n    const {\r\n        company,\r\n        title,\r\n        location,\r\n        from,\r\n        to,\r\n        current,\r\n        description,\r\n    } = formData;\r\n\r\n    const onChange = e =>\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 class=\"large text-primary\">Add An Experience</h1>\r\n            <p class=\"lead\">\r\n                <i class=\"fas fa-code-branch\"></i> Add any developer/programming\r\n                positions that you have had in the past\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form\r\n                class=\"form\"\r\n                onSubmit={e => {\r\n                    e.preventDefault();\r\n\r\n                    addExperience(formData, history);\r\n                }}\r\n            >\r\n                <div class=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"* Job Title\"\r\n                        name=\"title\"\r\n                        value={title}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"* Company\"\r\n                        name=\"company\"\r\n                        value={company}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Location\"\r\n                        name=\"location\"\r\n                        value={location}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <h4>From Date</h4>\r\n                    <input\r\n                        type=\"date\"\r\n                        name=\"from\"\r\n                        value={from}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <p>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"current\"\r\n                            checked={current}\r\n                            value={current}\r\n                            onChange={e => {\r\n                                setFormData({ ...formData, current: !current });\r\n                                toggleDisabled(!toDateDisabled);\r\n                            }}\r\n                        />{' '}\r\n                        Current Job\r\n                    </p>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <h4>To Date</h4>\r\n                    <input\r\n                        type=\"date\"\r\n                        name=\"to\"\r\n                        value={to}\r\n                        onChange={e => onChange(e)}\r\n                        disabled={toDateDisabled ? 'disabled' : ''}\r\n                    />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <textarea\r\n                        name=\"description\"\r\n                        cols=\"30\"\r\n                        rows=\"5\"\r\n                        placeholder=\"Job Description\"\r\n                        value={description}\r\n                        onChange={e => onChange(e)}\r\n                    ></textarea>\r\n                </div>\r\n                <input type=\"submit\" class=\"btn btn-primary my-1\" />\r\n                <a class=\"btn btn-light my-1\" href=\"dashboard.html\">\r\n                    Go Back\r\n                </a>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nAddExperience.propTypes = {\r\n    addExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addExperience })(AddExperience);\r\n","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profile-forms\\AddEducation.js",["140","141"],"import React, { Fragment, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addEducation } from '../../actions/profile';\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n    const [formData, setFormData] = useState({\r\n        school: '',\r\n        degree: '',\r\n        fieldofstudy: '',\r\n        from: '',\r\n        to: '',\r\n        current: false,\r\n        description: '',\r\n    });\r\n\r\n    const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n    const {\r\n        school,\r\n        degree,\r\n        fieldofstudy,\r\n        from,\r\n        to,\r\n        current,\r\n        description,\r\n    } = formData;\r\n\r\n    const onChange = e =>\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 class=\"large text-primary\">Add Your Education</h1>\r\n            <p class=\"lead\">\r\n                <i class=\"fas fa-code-branch\"></i> Add any school or bootcamp\r\n                that you have attended\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form\r\n                class=\"form\"\r\n                onSubmit={e => {\r\n                    e.preventDefault();\r\n\r\n                    addEducation(formData, history);\r\n                }}\r\n            >\r\n                <div class=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"* School or Bootcamp\"\r\n                        name=\"school\"\r\n                        value={school}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"* Degree or Certificate\"\r\n                        name=\"degree\"\r\n                        value={degree}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Field of Study\"\r\n                        name=\"fieldofstudy\"\r\n                        value={fieldofstudy}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <h4>From Date</h4>\r\n                    <input\r\n                        type=\"date\"\r\n                        name=\"from\"\r\n                        value={from}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <p>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"current\"\r\n                            checked={current}\r\n                            value={current}\r\n                            onChange={e => {\r\n                                setFormData({ ...formData, current: !current });\r\n                                toggleDisabled(!toDateDisabled);\r\n                            }}\r\n                        />{' '}\r\n                        Current School\r\n                    </p>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <h4>To Date</h4>\r\n                    <input\r\n                        type=\"date\"\r\n                        name=\"to\"\r\n                        value={to}\r\n                        onChange={e => onChange(e)}\r\n                        disabled={toDateDisabled ? 'disabled' : ''}\r\n                    />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <textarea\r\n                        name=\"description\"\r\n                        cols=\"30\"\r\n                        rows=\"5\"\r\n                        placeholder=\"Program Description\"\r\n                        value={description}\r\n                        onChange={e => onChange(e)}\r\n                    ></textarea>\r\n                </div>\r\n                <input type=\"submit\" class=\"btn btn-primary my-1\" />\r\n                <a class=\"btn btn-light my-1\" href=\"dashboard.html\">\r\n                    Go Back\r\n                </a>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nAddEducation.propTypes = {\r\n    addEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addEducation })(AddEducation);\r\n","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\dashboard\\Experience.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\dashboard\\Education.js",[],"D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profiles\\Profiles.js",["142"],"import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport ProfileItem from './ProfileItem';\r\nimport { getProfiles } from '../../actions/profile';\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n    useEffect(() => {\r\n        getProfiles();\r\n    }, []);\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? (\r\n                <Spinner />\r\n            ) : (\r\n                <Fragment>\r\n                    <h1 className=\";arge text-primary\">Developers</h1>\r\n                    <p className=\"lead\">\r\n                        <i className=\"fab fa-connectdevelop\">\r\n                            Browse and connect with developers\r\n                        </i>\r\n                    </p>\r\n                    <div className=\"profiles\">\r\n                        {profiles.length > 0 ? (\r\n                            profiles.map(profile => (\r\n                                <ProfileItem\r\n                                    key={profile._id}\r\n                                    profile={profile}\r\n                                ></ProfileItem>\r\n                            ))\r\n                        ) : (\r\n                            <h4>No profiles found</h4>\r\n                        )}\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nProfiles.propTypes = {\r\n    getProfiles: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\r\n","D:\\Dev\\Personal_Projects\\DevConnector\\client\\src\\components\\profiles\\ProfileItem.js",["143"],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":5,"column":1,"nodeType":"150","endLine":16,"endColumn":2},{"ruleId":"148","severity":1,"message":"149","line":19,"column":1,"nodeType":"150","endLine":54,"endColumn":2},{"ruleId":"151","severity":1,"message":"152","line":19,"column":8,"nodeType":"153","endLine":19,"endColumn":10,"suggestions":"154"},{"ruleId":"148","severity":1,"message":"149","line":18,"column":1,"nodeType":"150","endLine":57,"endColumn":2},{"ruleId":"155","severity":1,"message":"156","line":264,"column":19,"nodeType":"157","messageId":"158","endLine":264,"endColumn":22},{"ruleId":"148","severity":1,"message":"159","line":4,"column":1,"nodeType":"150","endLine":12,"endColumn":3},{"ruleId":"151","severity":1,"message":"160","line":53,"column":8,"nodeType":"153","endLine":53,"endColumn":17,"suggestions":"161"},{"ruleId":"155","severity":1,"message":"162","line":2,"column":10,"nodeType":"157","messageId":"158","endLine":2,"endColumn":14},{"ruleId":"155","severity":1,"message":"163","line":2,"column":16,"nodeType":"157","messageId":"158","endLine":2,"endColumn":26},{"ruleId":"155","severity":1,"message":"162","line":2,"column":10,"nodeType":"157","messageId":"158","endLine":2,"endColumn":14},{"ruleId":"155","severity":1,"message":"163","line":2,"column":16,"nodeType":"157","messageId":"158","endLine":2,"endColumn":26},{"ruleId":"151","severity":1,"message":"164","line":11,"column":8,"nodeType":"153","endLine":11,"endColumn":10,"suggestions":"165"},{"ruleId":"155","severity":1,"message":"166","line":3,"column":8,"nodeType":"157","messageId":"158","endLine":3,"endColumn":17},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["169"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","Assign arrow function to a variable before exporting as module default","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.facebook', 'profile.githubusername', 'profile.instagram', 'profile.linkedin', 'profile.location', 'profile.skills', 'profile.social.facebook', 'profile.social.instagram', 'profile.social.linkedin', 'profile.social.twitter', 'profile.social.youtube', 'profile.status', 'profile.twitter', 'profile.website', and 'profile.youtube'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["170"],"'Link' is defined but never used.","'withRouter' is defined but never used.","React Hook useEffect has a missing dependency: 'getProfiles'. Either include it or remove the dependency array. If 'getProfiles' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["171"],"'PropTypes' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"178","text":"179"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.facebook, profile.githubusername, profile.instagram, profile.linkedin, profile.location, profile.skills, profile.social.facebook, profile.social.instagram, profile.social.linkedin, profile.social.twitter, profile.social.youtube, profile.status, profile.twitter, profile.website, profile.youtube]",{"range":"180","text":"181"},"Update the dependencies array to be: [getProfiles]",{"range":"182","text":"183"},[613,615],"[getCurrentProfile]",[1960,1969],"[getCurrentProfile, loading, profile.bio, profile.company, profile.facebook, profile.githubusername, profile.instagram, profile.linkedin, profile.location, profile.skills, profile.social.facebook, profile.social.instagram, profile.social.linkedin, profile.social.twitter, profile.social.youtube, profile.status, profile.twitter, profile.website, profile.youtube]",[397,399],"[getProfiles]"]